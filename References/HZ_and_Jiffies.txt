
HZ and Jiffies: -
==============================
HZ is the number of times jiffies is incremented in one second. Each increment is called a tick.

Jiffies is incremented HZ times every second. If HZ = 1000, then it is incremented 1000 times 
(that is, one tick every 1/1,000 seconds). 

Example: - If HZ = 1000, then
 
	(Current jiffies - prev jiffies) = HZ or 1000, represents 1 second.
	
Similarly, if (Current jiffies - prev jiffies) = HZ/2, then it means 500ms.

Using the jiffies Counter : -
==============================

URL: - https://www.oreilly.com/library/view/linux-device-drivers/0596005903/ch07.html

Example: - 
------------
#include <linux/jiffies.h>
unsigned long j, stamp_1, stamp_half, stamp_n;

j = jiffies;                      /* read the current value */
stamp_1    = j + HZ;              /* 1 second in the future */
stamp_half = j + HZ/2;            /* half a second */
stamp_n    = j + n * HZ / 1000;   /* n milliseconds */

jiffies API: - 
----------------

#include <linux/jiffies.h>
int time_after(unsigned long a, unsigned long b);
int time_before(unsigned long a, unsigned long b);
int time_after_eq(unsigned long a, unsigned long b);
int time_before_eq(unsigned long a, unsigned long b);

time_after(): 
--------------
Evaluates true when "a" represents a time after "b".

time_before(): -
----------------
Evaluates true when time "a" is before time "b".

time_after_eq():- 
-------------------
Evaluates true when "a" is after or equal to "b".

Function's definition: -

#define time_after_eq(a,b)	\
	(typecheck(unsigned long, a) && \
	 typecheck(unsigned long, b) && \
	 ((long)((a) - (b)) >= 0))

time_before_eq()
-----------------
Evaluates true when "a" is before or equal to "b".